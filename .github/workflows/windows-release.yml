name: Build and Release Windows

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Install Dependencies
        run: flutter pub get

      - name: Enable Windows build
        run: flutter config --enable-windows-desktop

      - name: Build Windows Release
        run: flutter build windows --release --no-tree-shake-icons

      - name: Install Inno Setup (choco)
        run: |
          choco feature enable -n=allowGlobalConfirmation
          choco install innosetup -y

      - name: Build installer with Inno
        run: |
          "C:\\Program Files (x86)\\Inno Setup 6\\ISCC.exe" installer\\are_music.iss

      - name: Prepare artifact path
        run: |
          mkdir -p release
          copy /Y build\windows\x64\runner\Release\* release\
          powershell -Command "Add-Type -AssemblyName 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::CreateFromDirectory('release','are_music_windows_release.zip')"

      - name: Upload Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: are-music-windows-release
          path: |
            release
            are_music_windows_release.zip

  create-release:
    needs: build-windows
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: are-music-windows-release

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Find built installer or fallback zip
        id: find_asset
        run: |
          # prefer installer exe, fallback to zip
          ASSET=$(find . -type f -iname "ARE_Music_Installer_*.exe" -print -quit || true)
          if [ -z "$ASSET" ]; then
            ASSET=$(find . -type f -iname "*.exe" -print -quit || true)
          fi
          if [ -z "$ASSET" ]; then
            ASSET=$(find . -type f -iname "are_music_windows_release.zip" -print -quit || true)
          fi
          if [ -z "$ASSET" ]; then
            echo "No installer or zip found" >&2
            exit 1
          fi
          echo "asset=$ASSET" >> $GITHUB_OUTPUT

      - name: Compute SHA256 and prepare latest.json
        if: startsWith(github.ref, 'refs/tags/')
        env:
          REPO: ${{ github.repository }}
          TAG: ${{ github.ref_name }}
        run: |
          ASSET_PATH="${{ steps.find_asset.outputs.asset }}"
          ASSET_BASENAME=$(basename "$ASSET_PATH")
          SHA256=$(sha256sum "$ASSET_PATH" | awk '{print $1}')
          ASSET_URL="https://github.com/${REPO}/releases/download/${TAG}/${ASSET_BASENAME}"
          cat > latest.json <<EOF
{
  "version": "${TAG#v}",
  "url": "${ASSET_URL}",
  "sha256": "${SHA256}",
  "notes": "Release ${TAG}"
}
EOF
          echo "Prepared latest.json with url=${ASSET_URL} sha256=${SHA256}"

      - name: Push latest.json to gh-pages
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/checkout@v4
        with:
          persist-credentials: true
      - name: Commit and push latest.json
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin gh-pages || true
          git checkout -B gh-pages
          mv latest.json latest.json
          git add latest.json
          git commit -m "Publish latest.json for ${GITHUB_REF_NAME}" || true
          git push origin gh-pages --force

      - name: Upload asset to Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.find_asset.outputs.asset }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
